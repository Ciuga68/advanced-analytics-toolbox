"use strict";define(["../util/utils","ng!$q"],function(t,e){return{createCube:function(e,a){var r=a.layout,s=t.validateDimension(r.props.dimensions[0]),n=[{qDef:{qFieldDefs:[s]}}],l=r.props.measures.length;a.rowsLabel=["(Intercept)",""!=r.props.measures[1].label?r.props.measures[1].label:t.validateMeasure(r.props.measures[0])];for(var d=t.validateMeasure(r.props.measures[0])+" as mea0, "+t.validateMeasure(r.props.measures[1])+" as mea1",o="mea0 ~ mea1",i="NN",p=2;p<l;p++){var h=t.validateMeasure(r.props.measures[p]);if(h.length>0){var u=","+h+" as mea"+p;d+=u,o+=" + mea"+p,i+="N",a.rowsLabel.push(t.validateMeasure(r.props.measures[p]))}}var c=t.splitData(!0,r.props.splitPercentage,l),f=[{qDef:{qDef:"R.ScriptEvalExStr('"+i+"','library(jsonlite); "+c+" lm_result <- glm("+o+', data=training_data, family=binomial(link="logit"));lm_summary <- summary(lm_result);\n            pred <- predict(lm_result, test_data, type="response"); pred_result <- ifelse(pred > 0.5,1,0); act_result <- ifelse(test_data$mea0 > 0.5,1,0); conf.mat<-table(pred_result, act_result);\n            json<-toJSON(list(list(attributes(conf.mat)$dimnames[[1]], attributes(conf.mat)$dimnames[[2]]), unname(split(conf.mat, seq(nrow(conf.mat)))), c(length(training_data$mea0), length(test_data$mea0))));json;\','+d+")"}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}}];return a.backendApi.applyPatches([{qPath:"/qHyperCubeDef/qDimensions",qOp:"replace",qValue:JSON.stringify(n)},{qPath:"/qHyperCubeDef/qMeasures",qOp:"replace",qValue:JSON.stringify(f)}],!1),a.patchApplied=!0,null},drawChart:function(a){var r=e.defer(),s=a.layout,n=(t.validateDimension(s.props.dimensions[0]),[{qTop:0,qLeft:0,qWidth:2,qHeight:1}]);return a.backendApi.getData(n).then(function(e){if(0===e[0].qMatrix[0][1].qText.length||"-"==e[0].qMatrix[0][1].qText)t.displayConnectionError(a.extId);else{for(var n=JSON.parse(e[0].qMatrix[0][1].qText),l=n[0][0],d=n[0][1],o=n[1],i=n[2],p=function(t,e){return Math.round(t*Math.pow(10,e))/Math.pow(10,e)},h='\n            <h2>Confusion matrix:</h2>\n            <table class="simple" >\n              <thead>\n                <tr>\n                  <th rowspan="2" style="border-right:none;"></th><th rowspan="2"></th><th colspan="'+(d.length+1)+'" style="text-align:center">Actual class</th>\n                </tr>\n                <tr>\n                  ',u=0;u<d.length;u++)h+="<th>"+d[u]+"</th>";h+="<th>Precision</th></tr>\n            </thead>\n            <tbody>";for(var c=0,f=0,m=[],b=[],q=[],g=[],y=0;y<d.length;y++)b[y]=0,q[y]=0;for(var v=0;v<l.length;v++){h+=0===v?'<tr><td rowspan="'+(l.length+1)+'" style="font-weight:bold; white-space:nowrap; width:20px">Predicted class</td><td style="font-weight:bold">'+l[v]+"</td>":'<tr><td style="font-weight:bold">'+l[v]+"</td>";for(var D=0,w=0,M=0;M<d.length;M++)f+=o[v][M],w+=o[v][M],q[M]+=o[v][M],l[v]===d[M]&&(c+=o[v][M],D+=o[v][M],b[M]+=o[v][M]),h+="<td>"+o[v][M]+"</td>";m.push(D/w),h+="class"===s.props.rpartMethod?"<td>"+p(D/w*100,3)+"%</td></tr>":"<td>-</td></tr>"}h+='<tr><td style="font-weight:bold;">Recall</td>';for(var x=0;x<b.length;x++)h+="class"===s.props.rpartMethod?"<td>"+p(b[x]/q[x]*100,3)+"%</td>":"<td>-</td>",g.push(b[x]/q[x]);h+="<td></td></tr>",h+="</tbody>\n                  </table>";var _=function(t){return t.reduce(function(t,e,a,r){return t+e})},N=function(t,e){return _(t,e)/t.length};h+='<h2>Performance measures:</h2>\n                  <table class="simple" style="table-layout:fixed;">\n                    <thead>\n                      <tr>\n                        <th>Measures</th><th>Results</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr><td>Accuracy</td><td>'+("class"===s.props.rpartMethod?p(c/f*100,3)+"%":"-")+"</td></tr>\n                      <tr><td>Average precision</td><td>"+("class"===s.props.rpartMethod?p(100*N(m),3)+"%":"-")+"</td></tr>\n                      <tr><td>Average recall</td><td>"+("class"===s.props.rpartMethod?p(100*N(g),3)+"%":"-")+"</td></tr>\n                    </tbody>\n                  </table>\n                ",h+='<h2>Number of rows:</h2>\n                  <table class="simple" style="table-layout:fixed;">\n                    <thead>\n                      <tr>\n                        <th>Datasets</th><th>Number of rows</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr><td>Training data</td><td>'+i[0]+"</td></tr>\n                      <tr><td>Test data</td><td>"+i[1]+"</td></tr>\n                      <tr><td>Total</td><td>"+(i[0]+i[1])+"</td></tr>\n                    </tbody>\n                  </table>\n                ",$(".advanced-analytics-toolsets-"+a.extId).html(h)}return r.resolve()}),r.promise}}});
//# sourceMappingURL=../../maps/analysis/logistic_regression_predict.js.map
