"use strict";define(["../chart/line_chart","../chart/datatables","../util/utils","ng!$q","../../vendor/d3-format.min"],function(e,r,t,o,a){return{createCube:function(e,r){var o=r.layout,a=t.validateDimension(o.props.dimensions[0]),s=[{qNullSuppression:!0,qDef:{qFieldDefs:[a],qSortCriterias:[{qSortByExpression:o.props.dimSort||!o.props.dimSortByExpression?0:o.props.dimSortByExpressionAsc,qSortByNumeric:o.props.dimSort?1:o.props.dimSortByNum?o.props.dimSortByNumAsc:0,qSortByAscii:o.props.dimSort||!o.props.dimSortByAlph?0:o.props.dimSortByAlphAsc,qExpression:{qv:o.props.dimSortByExpressionString}}]}}],n=t.validateMeasure(o.props.measures[0]),p='json<-toJSON(list(res[,1], res[,2], res[,3], coef(summary(lm_result))[,"Estimate"]));';o.props.extendLine&&(p="by<-q$Dimension[length(q$Dimension)]-q$Dimension[length(q$Dimension)-1]; from<-q$Dimension[length(q$Dimension)]+by;\n                    data<-seq(from=from, by=by, length.out="+o.props.extendDurations+'); newdata <-data.frame(Dimension=data); pred_res<-predict(lm_result,newdata, interval="'+o.props.interval+'", level='+o.props.confidenceLevel+');\n                    json<-toJSON(list(res[,1], res[,2], res[,3], coef(summary(lm_result))[,"Estimate"], pred_res[,1], pred_res[,2], pred_res[,3]));'),t.displayDebugModeMessage(o.props.debugMode);var i=t.getDebugSaveDatasetScript(o.props.debugMode,"debug_simple_linear_line.rda"),l="R.ScriptEvalExStr('NN','"+i+' library(jsonlite); lm_result <- lm(Measure~Dimension, data=q);res<-predict(lm_result, interval="'+o.props.interval+'", level='+o.props.confidenceLevel+");\n      "+p+" json;',"+a+" as Dimension, "+n+" as Measure)";t.displayRScriptsToConsole(o.props.debugMode,[l]);var d=[{qDef:{qDef:n}},{qDef:{qLabel:"Fit",qDef:l}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}}];return r.backendApi.applyPatches([{qPath:"/qHyperCubeDef/qDimensions",qOp:"replace",qValue:JSON.stringify(s)},{qPath:"/qHyperCubeDef/qMeasures",qOp:"replace",qValue:JSON.stringify(d)}],!1),r.patchApplied=!0,null},drawChart:function(a,s){var n=o.defer(),p=a.layout,i=[{qTop:0,qLeft:0,qWidth:6,qHeight:1500}];return a.backendApi.getData(i).then(function(o){var i=(a.layout.qHyperCube.qMeasureInfo,null),l=o[0].qMatrix;if(0===l[0][2].qText.length||"-"==l[0][2].qText)for(var d=0;d<l.length;d++)0!==l[d][2].qText.length&&"-"!==l[d][2].qText&&(i=JSON.parse(l[d][2].qText));else i=JSON.parse(l[0][2].qText);if(null==i)t.displayConnectionError(a.extId);else{t.displayReturnedDatasetToConsole(p.props.debugMode,o[0]);var u=t.getDefaultPaletteColor(),m=i[0],c=i[1],f=i[2],q=i[3],h=i[4],y=i[5],b=i[6],x="y="+q[1]+"x";if(x+=q[0]<0?""+q[0]:"+"+q[0],"undefined"==typeof a.layout.props.displayTable||0==a.layout.props.displayTable){var g=[],v=[],D=[];if($.each(o[0].qMatrix,function(e,r){g.push(r[0].qElemNumber),v.push(r[0].qText),D.push(r[1].qNum)}),p.props.extendLine){$.merge(m,h),$.merge(c,y),$.merge(f,b);for(var S=0;S<p.props.extendDurations;S++)v.push("+"+(S+1)),D.push("")}var N=[{x:v,y:D,elemNum:g,name:"Observed",mode:"lines+markers",fill:p.props.line,fillcolor:p.props.colors?"rgba("+u[3]+",0.3)":"rgba("+u[p.props.colorForMain]+",0.3)",marker:{color:p.props.colors?"rgba("+u[3]+",1)":"rgba("+u[p.props.colorForMain]+",1)",size:p.props.datapoints?p.props.pointRadius:1},line:{width:p.props.borderWidth}},{x:v,y:m,name:"Fit",line:{color:"rgba("+u[p.props.colorForSub]+",1)"}},{x:v,y:c,name:"Lower",fill:"tonexty",fillcolor:"rgba("+u[p.props.colorForSub]+",0.3)",type:"scatter",mode:"none"},{x:v,y:f,name:"Upper",fill:"tonexty",fillcolor:"rgba("+u[p.props.colorForSub]+",0.3)",type:"scatter",mode:"none"}],B=Math.floor(v.length/2),M=v[B],E=m[B],L={annotations:[]};p.props.displayFormula&&L.annotations.push({x:M,y:E,text:x,xref:"x",yref:"y",ax:-30,ay:-40,showarrow:!0,arrowhead:3}),$(".advanced-analytics-toolsets-"+a.extId).html('<div id="aat-chart-'+a.extId+'" style="width:100%;height:100%;"></div>');var T=e.draw(a,N,"aat-chart-"+a.extId,L);e.setEvents(T,a,s)}else{var _=t.getLocale(a,0),w=t.getNumberFormat(a,0),F=[];if($.each(o[0].qMatrix,function(e,r){F.push([r[0].qElemNumber,r[0].qText,_.format(w)(r[1].qNum).replace(/G/,"B"),_.format(w)(m[e]).replace(/G/,"B"),_.format(w)(c[e]).replace(/G/,"B"),_.format(w)(f[e]).replace(/G/,"B")])}),p.props.extendLine)for(var C=0;C<p.props.forecastingPeriods;C++)F.push(["","+"+(C+1),"",_.format(w)(h[C]).replace(/G/,"B"),_.format(w)(y[C]).replace(/G/,"B"),_.format(w)(b[C]).replace(/G/,"B")]);var A='\n              <table id="aat-table-'+a.extId+'" class="display">\n                <thead>\n                  <tr>\n                    <th>qElemNumber</th>\n                    <th>'+a.layout.props.dimensions[0].label+"</th>\n                    <th>"+a.layout.props.measures[0].label+"</th>\n                    <th>Fit</th>\n                    <th>Lower</th>\n                    <th>Upper</th>\n                  </tr>\n                </thead>\n                <tbody>\n                </tbody>\n              </table>";r.draw(s,a,"#aat-table-"+a.extId,F,A,null).then(function(e){r.setEvents(e,a,s)})}}return n.resolve()}),n.promise}}});
//# sourceMappingURL=../../maps/analysis/simple_linear_line.js.map
