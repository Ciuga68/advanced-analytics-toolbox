{"version":3,"sources":["analysis/coefplot.js"],"names":["define","lineChart","utils","$q","createCube","app","$scope","layout","dimension","validateDimension","props","dimensions","qDef","qFieldDefs","meaLen","measures","length","rowsLabel","validateMeasure","params","meaList","dataType","i","mea","param","push","qLabel","backendApi","applyPatches","qPath","qOp","qValue","JSON","stringify","patchApplied","drawChart","defer","requestPage","qTop","qLeft","qWidth","qHeight","getData","then","dataPages","qHyperCube","qMeasureInfo","qMatrix","qText","displayConnectionError","extId","palette","getDefaultPaletteColor","result","parse","x","array","all","$","each","key","value","Math","abs","maxVal","max","apply","chartData","y","name","error_x","type","symmetric","arrayminus","thickness","borderWidth","color","colors","colorForMain","mode","marker","size","pointRadius","customOptions","showlegend","showLegend","xaxis","showgrid","xScale","side","xAxisPosition","range","yaxis","yScale","yAxisPosition","autorange","separators","getSeparators","dragmode","margin","r","marginRight","l","marginLeft","t","marginTop","b","marginBottom","html","draw","resolve","promise"],"mappings":"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","file":"../../js/analysis/coefplot.js","sourcesContent":["define([\r\n  '../chart/line_chart',\r\n  '../util/utils',\r\n  'ng!$q',\r\n], (lineChart, utils, $q) => {\r\n  return {\r\n    /**\r\n     * createCube - create HyperCubes\r\n     *\r\n     * @param {Object} app    reference to app\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Null} null\r\n     */\r\n    createCube(app, $scope) {\r\n      const layout = $scope.layout;\r\n\r\n      // Display loader\r\n      // utils.displayLoader($scope.extId);\r\n\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n\r\n      // Set definitions for dimensions and measures\r\n      const dimensions = [{ qDef: { qFieldDefs: [dimension] } }];\r\n\r\n      const meaLen = layout.props.measures.length;\r\n      $scope.rowsLabel = ['(Intercept)', utils.validateMeasure(layout.props.measures[1])]; // Label for dimension values\r\n      let params = `${utils.validateMeasure(layout.props.measures[0])} as mea0, ${utils.validateMeasure(layout.props.measures[1])} as mea1`;\r\n      let meaList = 'q$mea0 ~ q$mea1';\r\n      let dataType = 'NN';\r\n\r\n      for (let i = 2; i < meaLen; i++) {\r\n        const mea = utils.validateMeasure(layout.props.measures[i]);\r\n        if (mea.length > 0) {\r\n          const param = `,${mea} as mea${i}`;\r\n          params += param;\r\n          meaList += ` + q$mea${i}`;\r\n          dataType += 'N';\r\n\r\n          $scope.rowsLabel.push(utils.validateMeasure(layout.props.measures[i]));\r\n        }\r\n      }\r\n\r\n      const measures = [\r\n        {\r\n          qDef: {\r\n            qDef: `R.ScriptEvalExStr('${dataType}','library(jsonlite);lm_result <- lm(${meaList});res<-toJSON(coef(summary(lm_result)));res;',${params})`,\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n      ];\r\n\r\n      $scope.backendApi.applyPatches([\r\n        {\r\n          qPath: '/qHyperCubeDef/qDimensions',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(dimensions),\r\n        },\r\n        {\r\n          qPath: '/qHyperCubeDef/qMeasures',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(measures),\r\n        },\r\n      ], false);\r\n\r\n      $scope.patchApplied = true;\r\n      return null;\r\n    },\r\n    /**\r\n    * drawChart - draw chart with updated data\r\n    *\r\n    * @param {Object} $scope angular $scope\r\n    *\r\n    * @return {Object} Promise object\r\n    */\r\n    drawChart($scope) {\r\n      const defer = $q.defer();\r\n      const layout = $scope.layout;\r\n\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n      const requestPage = [{\r\n        qTop: 0,\r\n        qLeft: 0,\r\n        qWidth: 6,\r\n        qHeight: 1,\r\n      }];\r\n\r\n      $scope.backendApi.getData(requestPage).then((dataPages) => {\r\n        const measureInfo = $scope.layout.qHyperCube.qMeasureInfo;\r\n\r\n        // Display error when all measures' grand total return NaN.\r\n        if (dataPages[0].qMatrix[0][1].qText.length === 0 || dataPages[0].qMatrix[0][1].qText == '-') {\r\n          utils.displayConnectionError($scope.extId);\r\n        } else {\r\n          const palette = utils.getDefaultPaletteColor();\r\n          const result = JSON.parse(dataPages[0].qMatrix[0][1].qText);\r\n\r\n          const x = [];\r\n          const array = [];\r\n          const all = [];\r\n          $.each(result, (key, value) => {\r\n            x.push(value[0]);\r\n            array.push(value[1]);\r\n            all.push(Math.abs(value[0] + value[1]));\r\n            all.push(Math.abs(value[0] - value[1]));\r\n          });\r\n\r\n          const maxVal = Math.max.apply(null, all);\r\n\r\n          const chartData = [\r\n            {\r\n              x: x,\r\n              y: $scope.rowsLabel,\r\n              name: 'Coefficients plot',\r\n              error_x: {\r\n                type: 'data',\r\n                symmetric: false,\r\n                array: array,\r\n                arrayminus: array,\r\n                thickness: layout.props.borderWidth,\r\n                color: (layout.props.colors) ? `rgba(${palette[3]},1)` : `rgba(${palette[layout.props.colorForMain]},1)`,\r\n              },\r\n              type: 'scatter',\r\n              mode: 'markers',\r\n              marker: {\r\n                color: (layout.props.colors) ? `rgba(${palette[3]},1)` : `rgba(${palette[layout.props.colorForMain]},1)`,\r\n                size: layout.props.pointRadius,\r\n              },\r\n            }\r\n          ];\r\n\r\n          const customOptions = {\r\n            showlegend: $scope.layout.props.showLegend,\r\n            xaxis: {\r\n              showgrid: $scope.layout.props.xScale,\r\n              side: $scope.layout.props.xAxisPosition,\r\n              range: [(maxVal * 1.1) * -1, (maxVal * 1.1)],\r\n            },\r\n            yaxis: {\r\n              showgrid: $scope.layout.props.yScale,\r\n              side: $scope.layout.props.yAxisPosition,\r\n              autorange: 'reversed',\r\n              range: [-1, ($scope.rowsLabel.length)],\r\n            },\r\n            separators: utils.getSeparators($scope, 0),\r\n            dragmode: 'select',\r\n            margin: {\r\n              r: ($scope.layout.props.yAxisPosition == 'right') ? $scope.layout.props.marginRight + 70 : $scope.layout.props.marginRight,\r\n              l: ($scope.layout.props.yAxisPosition == 'left') ? $scope.layout.props.marginLeft + 70 : $scope.layout.props.marginLeft,\r\n              t: ($scope.layout.props.xAxisPosition == 'top') ? $scope.layout.props.marginTop + 70 : $scope.layout.props.marginTop,\r\n              b: ($scope.layout.props.xAxisPosition == 'bottom') ? $scope.layout.props.marginBottom + 70 : $scope.layout.props.marginBottom,\r\n            },\r\n          };\r\n\r\n          // Set HTML element for chart\r\n          $(`.advanced-analytics-toolsets-${$scope.extId}`).html(`<div id=\"aat-chart-${$scope.extId}\" style=\"width:100%;height:100%;\"></div>`);\r\n\r\n          lineChart.draw($scope, chartData, `aat-chart-${$scope.extId}`, customOptions);\r\n\r\n        }\r\n        return defer.resolve();\r\n      });\r\n      return defer.promise;\r\n    },\r\n  };\r\n});\r\n"]}