{"version":3,"sources":["properties.js"],"names":["define","analysis","qlik","$q","getNumberFormatSimple","app","currApp","undefined","defer","getAppLayout","layout","thousandSep","qLocaleInfo","qThousandSep","decimalSep","qDecimalSep","resolve","value","label","promise","type","component","items","dims","Dimensions","ref","itemTitleRef","allowAdd","allowRemove","addTranslation","expression","maxlength","meas","Measures","numberFormatting","options","defaultValue","formatting","show","data","numberFormattingSimple","then","customCurrency","prefixSuffix","numberFormatPattern","moneyFormatPattern","customFormatPattern","sorting","indexOf","props","analysisTypeId","sortDim","dimSort","dimSortByExpression","dimSortByExpressionAsc","dimSortByExpressionString","dimSortByNum","dimSortByNumAsc","dimSortByAlph","dimSortByAlphAsc","addons","uses","dataHandling","analysisCategoryDropDown","analysisCategories","map","d","id","name","analysisTypeDropDown","res","analysisTypes","filter","category","analysisCategoryId","displayTable","displayFormula","interval","confidenceLevel","frequency","numberOfClusters","optimizationMethod","clusterMax","bootstrap","scaleData","dividedBy","differencing","seasonalDifferences","firstDifferences","lagMax","lagMaxValue","lag","lagValue","decomposeInFourCharts","forecastingPeriods","displayARIMAParams","autoARIMA","AROrder","DegreeOfDifferencing","MAOrder","SeasonalAROrder","SeasonalDegreeOfDifferencing","SeasonalMAOrder","numOfFrequentTerms","tolower","removeNumbers","stopwords","removePunctuation","stemming","rpartMethod","minSplit","minBucket","cp","maxDepth","defaultCollapseLevel","displayResultsOnAllNodes","splitDataset","splitPercentage","min","max","settings","presentation","line","datapoints","borderWidth","step","pointRadius","bubbleSize","defineScreenSize","screenWidth","screenHeight","colorsAndLegend","colors","colorForMain","colorForSub","showLegend","xAxis","xLabelsAndTitle","xAxisPosition","xScale","xAxisType","yAxis","yLabelsAndTitle","yAxisPosition","yScale","zAxis","zLabelsAndTitle"],"mappings":"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","file":"../../properties.js","sourcesContent":["define(['./lib/js/analysis/analysis', 'qlik', 'ng!$q'], (analysis, qlik, $q) => {\r\n  const getNumberFormatSimple = () => {\r\n    const app = qlik.currApp(this);\r\n    const defer = $q.defer();\r\n\r\n    app.getAppLayout((layout) => {\r\n      const thousandSep = layout.qLocaleInfo.qThousandSep;\r\n      const decimalSep = layout.qLocaleInfo.qDecimalSep;\r\n      return defer.resolve(\r\n        [\r\n          {\r\n            value: 0,\r\n            label: `1${thousandSep}000`,\r\n          },\r\n          {\r\n            value: 1,\r\n            label: `1${thousandSep}000${decimalSep}1`,\r\n          },\r\n          {\r\n            value: 2,\r\n            label: `1${thousandSep}000${decimalSep}12`,\r\n          },\r\n          {\r\n            value: 3,\r\n            label: '12%',\r\n          },\r\n          {\r\n            value: 4,\r\n            label: `12${decimalSep}3%`,\r\n          },\r\n          {\r\n            value: 5,\r\n            label: `12${decimalSep}34%`,\r\n          },\r\n        ]);\r\n    });\r\n    return defer.promise;\r\n  };\r\n\r\n  return {\r\n    type: 'items',\r\n    component: 'accordion',\r\n    items: {\r\n      // dimensions: {\r\n      //   uses: \"dimensions\",\r\n      //   show: false,\r\n      // },\r\n      // measures: {\r\n      //   uses: \"measures\",\r\n      //   show: false,\r\n      // },\r\n      dims: {\r\n        label: 'Dimensions',\r\n        items: {\r\n          Dimensions: {\r\n            type: 'array',\r\n            ref: 'props.dimensions',\r\n            label: 'Dimensions',\r\n            itemTitleRef: 'label',\r\n            allowAdd: true,\r\n            allowRemove: true,\r\n            addTranslation: 'Add dimension',\r\n            items: {\r\n              expression: {\r\n                label: 'Field',\r\n                type: 'string',\r\n                ref: 'expression',\r\n                expression: 'optional',\r\n              },\r\n              label: {\r\n                label: 'Label',\r\n                type: 'string',\r\n                maxlength: 100,\r\n                ref: 'label',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      meas: {\r\n        label: 'Measures',\r\n        items: {\r\n          Measures: {\r\n            type: 'array',\r\n            ref: 'props.measures',\r\n            label: 'Measures',\r\n            itemTitleRef: 'label',\r\n            allowAdd: true,\r\n            allowRemove: true,\r\n            addTranslation: 'Add measure',\r\n            items: {\r\n              expression: {\r\n                label: 'Expression',\r\n                type: 'string',\r\n                ref: 'expression',\r\n                expression: 'optional',\r\n              },\r\n              label: {\r\n                label: 'Label',\r\n                type: 'string',\r\n                maxlength: 100,\r\n                ref: 'label',\r\n              },\r\n              numberFormatting: {\r\n                type: 'string',\r\n                component: 'dropdown',\r\n                label: 'Number formatting',\r\n                ref: 'numberFormatting',\r\n                options: [\r\n                  {\r\n                    value: 0,\r\n                    label: 'Auto',\r\n                  },\r\n                  {\r\n                    value: 1,\r\n                    label: 'Number',\r\n                  },\r\n                  {\r\n                    value: 2,\r\n                    label: 'Money',\r\n                  },\r\n                  {\r\n                    value: 5,\r\n                    label: 'Custom',\r\n                  },\r\n                ],\r\n                defaultValue: 0,\r\n              },\r\n              formatting: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Formatting',\r\n                ref: 'formatting',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'Simple',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Custom',\r\n                }],\r\n                defaultValue: true,\r\n                show: (data) => {\r\n                  return data.numberFormatting === 1;\r\n                },\r\n              },\r\n              numberFormattingSimple: {\r\n                type: 'string',\r\n                component: 'dropdown',\r\n                ref: 'numberFormattingSimple',\r\n                options: getNumberFormatSimple().then((items) => {\r\n                  return items;\r\n                }),\r\n                defaultValue: 2,\r\n                show: (data) => {\r\n                  return data.numberFormatting === 1 && (data.formatting === true || typeof data.formatting == 'undefined');\r\n                },\r\n              },\r\n              customCurrency: {\r\n                label: 'Currency',\r\n                type: 'string',\r\n                maxlength: 100,\r\n                ref: 'customCurrency',\r\n                defaultValue: '$',\r\n                show: (data) => {\r\n                  return data.numberFormatting === 2;\r\n                },\r\n              },\r\n              prefixSuffix: {\r\n                type: 'string',\r\n                component: 'dropdown',\r\n                ref: 'prefixSuffix',\r\n                options: [{\r\n                  value: 'prefix',\r\n                  label: 'Prefix',\r\n                }, {\r\n                  value: 'suffix',\r\n                  label: 'Suffix',\r\n                }],\r\n                defaultValue: 'prefix',\r\n                show: (data) => {\r\n                  return data.numberFormatting === 2;\r\n                },\r\n              },\r\n              numberFormatPattern: {\r\n                label: 'Format pattern',\r\n                type: 'string',\r\n                maxlength: 100,\r\n                ref: 'numberFormatPattern',\r\n                defaultValue: ',.2f',\r\n                show: (data) => {\r\n                  return data.numberFormatting === 1 && data.formatting === false;\r\n                },\r\n              },\r\n              moneyFormatPattern: {\r\n                label: 'Format pattern',\r\n                type: 'string',\r\n                maxlength: 100,\r\n                ref: 'moneyFormatPattern',\r\n                defaultValue: ',.2f',\r\n                show: (data) => {\r\n                  return data.numberFormatting === 2;\r\n                },\r\n              },\r\n              customFormatPattern: {\r\n                label: 'Format pattern',\r\n                type: 'string',\r\n                maxlength: 100,\r\n                ref: 'customFormatPattern',\r\n                defaultValue: ',.2f',\r\n                show: (data) => {\r\n                  return data.numberFormatting === 5;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      sorting: {\r\n        type: 'items',\r\n        label: 'Sorting',\r\n        show: (data) => {\r\n          return [0, 17].indexOf(data.props.analysisTypeId) >= 0;\r\n        },\r\n        items: {\r\n          sortDim: {\r\n            type: 'items',\r\n            label: 'Dimension',\r\n            items: {\r\n              dimSort: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Sorting',\r\n                ref: 'props.dimSort',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'Auto',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Custom',\r\n                }],\r\n                defaultValue: true,\r\n              },\r\n              dimSortByExpression: {\r\n                type: 'boolean',\r\n                label: 'Sort by expression',\r\n                ref: 'props.dimSortByExpression',\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return !data.props.dimSort;\r\n                },\r\n              },\r\n              dimSortByExpressionAsc: {\r\n                type: 'integer',\r\n                component: 'dropdown',\r\n                ref: 'props.dimSortByExpressionAsc',\r\n                options: [{\r\n                  value: 1,\r\n                  label: 'Ascending',\r\n                }, {\r\n                  value: -1,\r\n                  label: 'Descending',\r\n                }],\r\n                defaultValue: 1,\r\n                show: (data) => {\r\n                  return !data.props.dimSort && data.props.dimSortByExpression;\r\n                },\r\n              },\r\n              dimSortByExpressionString: {\r\n                label: 'Expression',\r\n                type: 'string',\r\n                ref: 'props.dimSortByExpressionString',\r\n                expression: 'optional',\r\n                show: (data) => {\r\n                  return !data.props.dimSort && data.props.dimSortByExpression;\r\n                },\r\n              },\r\n              dimSortByNum: {\r\n                type: 'boolean',\r\n                label: 'Sort numerically',\r\n                ref: 'props.dimSortByNum',\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return !data.props.dimSort;\r\n                },\r\n              },\r\n              dimSortByNumAsc: {\r\n                type: 'integer',\r\n                component: 'dropdown',\r\n                ref: 'props.dimSortByNumAsc',\r\n                options: [{\r\n                  value: 1,\r\n                  label: 'Ascending',\r\n                }, {\r\n                  value: -1,\r\n                  label: 'Descending',\r\n                }],\r\n                defaultValue: 1,\r\n                show: (data) => {\r\n                  return !data.props.dimSort && data.props.dimSortByNum;\r\n                },\r\n              },\r\n              dimSortByAlph: {\r\n                type: 'boolean',\r\n                label: 'Sort alphabetically',\r\n                ref: 'props.dimSortByAlph',\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return !data.props.dimSort;\r\n                },\r\n              },\r\n              dimSortByAlphAsc: {\r\n                type: 'integer',\r\n                component: 'dropdown',\r\n                ref: 'props.dimSortByAlphAsc',\r\n                options: [{\r\n                  value: 1,\r\n                  label: 'Ascending',\r\n                }, {\r\n                  value: -1,\r\n                  label: 'Descending',\r\n                }],\r\n                defaultValue: 1,\r\n                show: (data) => {\r\n                  return !data.props.dimSort && data.props.dimSortByAlph;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      addons: {\r\n        uses: 'addons',\r\n        items: {\r\n          dataHandling: {\r\n            uses: 'dataHandling',\r\n          },\r\n        },\r\n      },\r\n      analysis: {\r\n        label: 'Analysis Settings',\r\n        items: {\r\n          analysisCategoryDropDown: {\r\n            type: 'integer',\r\n            component: 'dropdown',\r\n            label: 'Analysis Category',\r\n            ref: 'props.analysisCategoryId',\r\n            options: analysis.analysisCategories.map((d) => {\r\n              return {\r\n                value: d.id,\r\n                label: d.name,\r\n              };\r\n            }),\r\n            defaultValue: -1,\r\n          },\r\n          analysisTypeDropDown: {\r\n            type: 'integer',\r\n            component: 'dropdown',\r\n            label: 'Analysis Type',\r\n            ref: 'props.analysisTypeId',\r\n            options: (data) => {\r\n              const res = analysis.analysisTypes\r\n              .filter((d) => {\r\n                return d.category === data.props.analysisCategoryId;\r\n              })\r\n              .map((d) => {\r\n                return {\r\n                  value: d.id,\r\n                  label: d.name,\r\n                };\r\n              });\r\n              return res;\r\n            },\r\n            show: (data) => {\r\n              return data.props.analysisCategoryId >= 0;\r\n            },\r\n            defaultValue: -1,\r\n          },\r\n          displayTable: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Table display mode',\r\n            ref: 'props.displayTable',\r\n            options: [{\r\n              value: false,\r\n              label: 'Off',\r\n            }, {\r\n              value: true,\r\n              label: 'On',\r\n            }],\r\n            defaultValue: false,\r\n            show: (data) => {\r\n              return [0, 9].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          // *****\r\n          // Analysis Options\r\n          // *****\r\n          displayFormula: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Display formula',\r\n            ref: 'props.displayFormula',\r\n            options: [{\r\n              value: false,\r\n              label: 'Off',\r\n            }, {\r\n              value: true,\r\n              label: 'On',\r\n            }],\r\n            defaultValue: false,\r\n            show: (data) => {\r\n              return [1].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          interval: {\r\n            type: 'string',\r\n            component: 'dropdown',\r\n            label: 'Interval',\r\n            ref: 'props.interval',\r\n            options: [{\r\n              value: 'confidence',\r\n              label: 'confidence',\r\n            }, {\r\n              value: 'prediction',\r\n              label: 'prediction',\r\n            }],\r\n            defaultValue: 'confidence',\r\n            show: (data) => {\r\n              return [0, 1, 17].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          confidenceLevel: {\r\n            ref: 'props.confidenceLevel',\r\n            label: 'Confidence level',\r\n            type: 'string',\r\n            show: (data) => {\r\n              return [0, 1, 2, 3, 4, 5, 9, 17, 22].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            defaultValue: 0.95,\r\n          },\r\n          frequency: {\r\n            ref: 'props.frequency',\r\n            label: 'Frequency',\r\n            type: 'integer',\r\n            show: (data) => {\r\n              return [8, 9].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            defaultValue: 12,\r\n          },\r\n          // k-means\r\n          numberOfClusters: {\r\n            ref: 'props.numberOfClusters',\r\n            label: 'Number of clusters',\r\n            type: 'integer',\r\n            show: (data) => {\r\n              return [10, 16, 24].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            defaultValue: 3,\r\n          },\r\n          optimizationMethod: {\r\n            ref: 'props.optimizationMethod',\r\n            label: 'Optimization method',\r\n            component: 'dropdown',\r\n            type: 'string',\r\n            options: [{\r\n              value: 'gap',\r\n              label: 'Gap Statistic',\r\n            }],\r\n            defaultValue: 'gap',\r\n            show: (data) => {\r\n              return [23].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          clusterMax: {\r\n            ref: 'props.clusterMax',\r\n            label: 'Max number of clusters',\r\n            type: 'integer',\r\n            show: (data) => {\r\n              return [23].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            defaultValue: 10,\r\n          },\r\n          bootstrap: {\r\n            ref: 'props.bootstrap',\r\n            label: 'Number of Monte Carlo samples',\r\n            type: 'integer',\r\n            show: (data) => {\r\n              return [23].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            defaultValue: 10,\r\n          },\r\n          scaleData: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Scale data',\r\n            ref: 'props.scaleData',\r\n            options: [{\r\n              value: false,\r\n              label: 'Off',\r\n            }, {\r\n              value: true,\r\n              label: 'On',\r\n            }],\r\n            defaultValue: false,\r\n            show: (data) => {\r\n              return [10, 16, 23, 24].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          dividedBy: {\r\n            type: 'string',\r\n            component: 'dropdown',\r\n            label: 'Grouped by',\r\n            ref: 'props.dividedBy',\r\n            options: [{\r\n              value: 'variables',\r\n              label: 'Variables',\r\n            },\r\n            {\r\n              value: 'clusters',\r\n              label: 'Clusters',\r\n            }],\r\n            defaultValue: 'clusters',\r\n            show: (data) => {\r\n              return [24].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          // Time series analysis\r\n          differencing: {\r\n            ref: 'props.differencing',\r\n            label: 'Differencing',\r\n            component: 'dropdown',\r\n            type: 'integer',\r\n            options: [{\r\n              value: 0,\r\n              label: 'Off',\r\n            }, {\r\n              value: 1,\r\n              label: 'Seasonal differences',\r\n            }, {\r\n              value: 2,\r\n              label: 'First and seasonal differences',\r\n            }],\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [6, 7, 12].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          seasonalDifferences: {\r\n            ref: 'props.seasonalDifferences',\r\n            label: 'Seasonal differences',\r\n            type: 'integer',\r\n            defaultValue: 12,\r\n            show: (data) => {\r\n              return [6, 7, 12].indexOf(data.props.analysisTypeId) >= 0 && [1, 2].indexOf(data.props.differencing) >= 0;\r\n            },\r\n          },\r\n          firstDifferences: {\r\n            ref: 'props.firstDifferences',\r\n            label: 'First differences',\r\n            type: 'integer',\r\n            defaultValue: 1,\r\n            show: (data) => {\r\n              return [6, 7, 9, 12].indexOf(data.props.analysisTypeId) >= 0 && data.props.differencing === 2;\r\n            },\r\n          },\r\n          // Autocorrelation\r\n          lagMax: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Lag max',\r\n            ref: 'props.lagMax',\r\n            options: [{\r\n              value: true,\r\n              label: 'Auto',\r\n            }, {\r\n              value: false,\r\n              label: 'Custom',\r\n            }],\r\n            defaultValue: true,\r\n            show: (data) => {\r\n              return [6].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          lagMaxValue: {\r\n            ref: 'props.lagMaxValue',\r\n            label: 'Lag max',\r\n            type: 'integer',\r\n            defaultValue: 20,\r\n            show: (data) => {\r\n              return [6].indexOf(data.props.analysisTypeId) >= 0 && data.props.lagMax === false;\r\n            },\r\n          },\r\n          // Ljung-Box Test\r\n          lag: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Lag',\r\n            ref: 'props.lag',\r\n            options: [{\r\n              value: true,\r\n              label: 'Auto',\r\n            }, {\r\n              value: false,\r\n              label: 'Custom',\r\n            }],\r\n            defaultValue: true,\r\n            show: (data) => {\r\n              return [7].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          lagValue: {\r\n            ref: 'props.lagValue',\r\n            label: 'Lag',\r\n            type: 'integer',\r\n            defaultValue: 1,\r\n            show: (data) => {\r\n              return [7].indexOf(data.props.analysisTypeId) >= 0 && data.props.lag === false;\r\n            },\r\n          },\r\n          // Decompose time series\r\n          decomposeInFourCharts: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Display in 4 charts ',\r\n            ref: 'props.decomposeInFourCharts',\r\n            options: [{\r\n              value: true,\r\n              label: 'On',\r\n            }, {\r\n              value: false,\r\n              label: 'Off',\r\n            }],\r\n            defaultValue: true,\r\n            show: (data) => {\r\n              return [8].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          // ARIMA forecast\r\n          forecastingPeriods: {\r\n            ref: 'props.forecastingPeriods',\r\n            label: 'Forecasting periods',\r\n            type: 'integer',\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            defaultValue: 12,\r\n          },\r\n          displayARIMAParams: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Display ARIMA parameters',\r\n            ref: 'props.displayARIMAParams',\r\n            options: [{\r\n              value: false,\r\n              label: 'Off',\r\n            }, {\r\n              value: true,\r\n              label: 'On',\r\n            }],\r\n            defaultValue: false,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          autoARIMA: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Parameter settings',\r\n            ref: 'props.autoARIMA',\r\n            options: [{\r\n              value: true,\r\n              label: 'Auto',\r\n            }, {\r\n              value: false,\r\n              label: 'Custom',\r\n            }],\r\n            defaultValue: true,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          AROrder: {\r\n            ref: 'props.AROrder',\r\n            label: 'AR Order(p)',\r\n            type: 'integer',\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\r\n            },\r\n          },\r\n          DegreeOfDifferencing: {\r\n            ref: 'props.DegreeOfDifferencing',\r\n            label: 'Degree of differencing(d)',\r\n            type: 'integer',\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\r\n            },\r\n          },\r\n          MAOrder: {\r\n            ref: 'props.MAOrder',\r\n            label: 'MA Order(q)',\r\n            type: 'integer',\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\r\n            },\r\n          },\r\n          SeasonalAROrder: {\r\n            ref: 'props.SeasonalAROrder',\r\n            label: 'Seasonal AR Order(P)',\r\n            type: 'integer',\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\r\n            },\r\n          },\r\n          SeasonalDegreeOfDifferencing: {\r\n            ref: 'props.SeasonalDegreeOfDifferencing',\r\n            label: 'Seasonal degree of differencing(D)',\r\n            type: 'integer',\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\r\n            },\r\n          },\r\n          SeasonalMAOrder: {\r\n            ref: 'props.SeasonalMAOrder',\r\n            label: 'Seasonal MA Order(Q)',\r\n            type: 'integer',\r\n            defaultValue: 0,\r\n            show: (data) => {\r\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\r\n            },\r\n          },\r\n          // Text mining / Wordcloud\r\n          numOfFrequentTerms: {\r\n            ref: 'props.numOfFrequentTerms',\r\n            label: 'Show top N frequent terms',\r\n            type: 'integer',\r\n            defaultValue: 50,\r\n            show: (data) => {\r\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          tolower: {\r\n            type: 'string',\r\n            component: 'switch',\r\n            label: 'Convert to lower case',\r\n            ref: 'props.tolower',\r\n            options: [{\r\n              value: 'FALSE',\r\n              label: 'Off',\r\n            }, {\r\n              value: 'TRUE',\r\n              label: 'On',\r\n            }],\r\n            defaultValue: 'TRUE',\r\n            show: (data) => {\r\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          removeNumbers: {\r\n            type: 'string',\r\n            component: 'switch',\r\n            label: 'Remove numbers',\r\n            ref: 'props.removeNumbers',\r\n            options: [{\r\n              value: 'FALSE',\r\n              label: 'Off',\r\n            }, {\r\n              value: 'TRUE',\r\n              label: 'On',\r\n            }],\r\n            defaultValue: 'TRUE',\r\n            show: (data) => {\r\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          stopwords: {\r\n            type: 'string',\r\n            component: 'switch',\r\n            label: 'Remove English common stepwords',\r\n            ref: 'props.stopwords',\r\n            options: [{\r\n              value: 'FALSE',\r\n              label: 'Off',\r\n            }, {\r\n              value: 'TRUE',\r\n              label: 'On',\r\n            }],\r\n            defaultValue: 'TRUE',\r\n            show: (data) => {\r\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          removePunctuation: {\r\n            type: 'string',\r\n            component: 'switch',\r\n            label: 'Remove punctuations',\r\n            ref: 'props.removePunctuation',\r\n            options: [{\r\n              value: 'FALSE',\r\n              label: 'Off',\r\n            }, {\r\n              value: 'TRUE',\r\n              label: 'On',\r\n            }],\r\n            defaultValue: 'TRUE',\r\n            show: (data) => {\r\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          stemming: {\r\n            type: 'string',\r\n            component: 'switch',\r\n            label: 'Text stemming',\r\n            ref: 'props.stemming',\r\n            options: [{\r\n              value: 'FALSE',\r\n              label: 'Off',\r\n            }, {\r\n              value: 'TRUE',\r\n              label: 'On',\r\n            }],\r\n            defaultValue: 'TRUE',\r\n            show: (data) => {\r\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          // Decision tree\r\n          rpartMethod: {\r\n            type: 'string',\r\n            component: 'dropdown',\r\n            label: 'Method',\r\n            ref: 'props.rpartMethod',\r\n            options: [{\r\n              value: 'class',\r\n              label: 'Class',\r\n            }, {\r\n              value: 'anova',\r\n              label: 'Anova',\r\n            }],\r\n            defaultValue: 'class',\r\n            show: (data) => {\r\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          minSplit: {\r\n            ref: 'props.minSplit',\r\n            label: 'Minimum split',\r\n            type: 'integer',\r\n            defaultValue: 20,\r\n            show: (data) => {\r\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          minBucket: {\r\n            ref: 'props.minBucket',\r\n            label: 'Minimum bucket',\r\n            type: 'integer',\r\n            defaultValue: 6,\r\n            show: (data) => {\r\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          cp: {\r\n            ref: 'props.cp',\r\n            label: 'Complexity parameter(cp)',\r\n            type: 'number',\r\n            defaultValue: 0.01,\r\n            show: (data) => {\r\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          maxDepth: {\r\n            ref: 'props.maxDepth',\r\n            label: 'Max depth',\r\n            type: 'integer',\r\n            defaultValue: 30,\r\n            show: (data) => {\r\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          defaultCollapseLevel: {\r\n            ref: 'props.defaultCollapseLevel',\r\n            label: 'Default Collapse Level',\r\n            type: 'integer',\r\n            defaultValue: 3,\r\n            show: (data) => {\r\n              return [25].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          displayResultsOnAllNodes: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Display results on all nodes',\r\n            ref: 'props.displayResultsOnAllNodes',\r\n            options: [{\r\n              value: true,\r\n              label: 'On',\r\n            }, {\r\n              value: false,\r\n              label: 'Off',\r\n            }],\r\n            defaultValue: false,\r\n            show: (data) => {\r\n              return [25].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          splitDataset: {\r\n            type: 'boolean',\r\n            component: 'switch',\r\n            label: 'Split into training and test datasets',\r\n            ref: 'props.splitDataset',\r\n            options: [{\r\n              value: true,\r\n              label: 'On',\r\n            }, {\r\n              value: false,\r\n              label: 'Off',\r\n            }],\r\n            defaultValue: false,\r\n            show: (data) => {\r\n              return [25, 27, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n          },\r\n          splitPercentage: {\r\n            ref: 'props.splitPercentage',\r\n            label: 'Treat first N% records as training dataset',\r\n            type: 'number',\r\n            min: 0.01,\r\n            max: 0.99,\r\n            defaultValue: 0.8,\r\n            show: (data) => {\r\n              return ([25, 27, 29].indexOf(data.props.analysisTypeId) >= 0 && data.props.splitDataset === true) || ([26, 28].indexOf(data.props.analysisTypeId) >= 0);\r\n            },\r\n          },\r\n        },\r\n      },\r\n      settings: {\r\n        uses: 'settings',\r\n        items: {\r\n          presentation: {\r\n            type: 'items',\r\n            label: 'Presentation',\r\n            items: {\r\n              line: {\r\n                type: 'string',\r\n                component: 'dropdown',\r\n                ref: 'props.line',\r\n                options: [{\r\n                  value: 'none',\r\n                  label: 'Line',\r\n                }, {\r\n                  value: 'tozeroy',\r\n                  label: 'Area',\r\n                }],\r\n                defaultValue: 'none',\r\n                show: (data) => {\r\n                  return [0, 6, 8, 9, 17, 20].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              datapoints: {\r\n                type: 'boolean',\r\n                label: 'Show data points',\r\n                ref: 'props.datapoints',\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return [0, 6, 8, 9, 17, 20].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              borderWidth: {\r\n                type: 'number',\r\n                component: 'slider',\r\n                label: 'Border Width',\r\n                ref: 'props.borderWidth',\r\n                min: 0,\r\n                max: 10,\r\n                step: 1,\r\n                defaultValue: 1,\r\n                show: (data) => {\r\n                  return [0, 6, 8, 9, 15, 17, 20, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              pointRadius: {\r\n                type: 'number',\r\n                component: 'slider',\r\n                label: 'Point Radius',\r\n                ref: 'props.pointRadius',\r\n                min: 1,\r\n                max: 10,\r\n                step: 1,\r\n                defaultValue: 6,\r\n                show: (data) => {\r\n                  return [0, 6, 8, 9, 15, 17, 20, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              bubbleSize: {\r\n                type: 'number',\r\n                component: 'slider',\r\n                label: 'Bubble Size',\r\n                ref: 'props.bubbleSize',\r\n                min: 0,\r\n                max: 50,\r\n                step: 1,\r\n                defaultValue: 12,\r\n                show: (data) => {\r\n                  return [1, 10, 16, 19, 25].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              defineScreenSize: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Screen size',\r\n                ref: 'props.defineScreenSize',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'Auto',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Custom',\r\n                }],\r\n                defaultValue: true,\r\n                show: (data) => {\r\n                  return [25].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              screenWidth: {\r\n                label: 'Width',\r\n                ref: 'props.screenWidth',\r\n                type: 'integer',\r\n                defaultValue: 960,\r\n                show: (data) => {\r\n                  return [25].indexOf(data.props.analysisTypeId) >= 0 && data.props.defineScreenSize === false;\r\n                },\r\n              },\r\n              screenHeight: {\r\n                label: 'Height',\r\n                ref: 'props.screenHeight',\r\n                type: 'integer',\r\n                defaultValue: 500,\r\n                show: (data) => {\r\n                  return [25].indexOf(data.props.analysisTypeId) >= 0 && data.props.defineScreenSize === false;\r\n                },\r\n              },\r\n            },\r\n          },\r\n          colorsAndLegend: {\r\n            type: 'items',\r\n            label: 'Colors and legend',\r\n            items: {\r\n              colors: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Colors',\r\n                ref: 'props.colors',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'Auto',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Custom',\r\n                }],\r\n                defaultValue: true,\r\n                show: (data) => {\r\n                  return [0, 1, 6, 8, 9, 15, 17, 19, 20, 25, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              // colorBy: {\r\n              //   type: 'string',\r\n              //   component: 'dropdown',\r\n              //   ref: 'props.colorBy',\r\n              //   options: [{\r\n              //     value: 'single',\r\n              //     label: 'Single color',\r\n              //   }, {\r\n              //     value: 'dimension',\r\n              //     label: 'By dimension',\r\n              //   }],\r\n              //   defaultValue: 'single',\r\n              //   show: (data) => {\r\n              //     return  [1].indexOf(data.props.analysisTypeId) >= 0 && data.props.colors === false;\r\n              //   },\r\n              // },\r\n              colorForMain: {\r\n                label: 'Color',\r\n                component: 'color-picker',\r\n                ref: 'props.colorForMain',\r\n                type: 'integer',\r\n                defaultValue: 3,\r\n                show: (data) => {\r\n                  return [0, 1, 6, 8, 9, 15, 17, 19, 20, 25, 29].indexOf(data.props.analysisTypeId) >= 0 && data.props.colors === false;\r\n                },\r\n              },\r\n              colorForSub: {\r\n                label: 'Color (Trend/Forecast)',\r\n                component: 'color-picker',\r\n                ref: 'props.colorForSub',\r\n                type: 'integer',\r\n                defaultValue: 7,\r\n                show: (data) => {\r\n                  return [0, 1, 9, 17, 19, 20].indexOf(data.props.analysisTypeId) >= 0 && data.props.colors === false;\r\n                },\r\n              },\r\n              showLegend: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Show legend',\r\n                ref: 'props.showLegend',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'On',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Off',\r\n                }],\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return [0, 1, 9, 10, 15, 16, 17, 19, 20, 24, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n            },\r\n          },\r\n          xAxis: {\r\n            type: 'items',\r\n            label: 'X-axis',\r\n            items: {\r\n              xLabelsAndTitle: {\r\n                type: 'boolean',\r\n                label: 'Show title',\r\n                component: 'switch',\r\n                ref: 'props.xLabelsAndTitle',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'On',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Off',\r\n                }],\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return [0, 1, 9, 10, 16, 17, 20, 24].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              xAxisPosition: {\r\n                type: 'string',\r\n                label: 'Position',\r\n                component: 'dropdown',\r\n                ref: 'props.xAxisPosition',\r\n                options: [{\r\n                  value: 'bottom',\r\n                  label: 'Bottom',\r\n                }, {\r\n                  value: 'top',\r\n                  label: 'Top',\r\n                }],\r\n                defaultValue: 'bottom',\r\n                show: (data) => {\r\n                  return [0, 1, 9, 10, 15, 17, 20, 24, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              xScale: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Scale',\r\n                ref: 'props.xScale',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'On',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Off',\r\n                }],\r\n                defaultValue: true,\r\n                show: (data) => {\r\n                  return [0, 1, 6, 8, 9, 10, 15, 17, 19, 20, 24, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              xAxisType: {\r\n                type: 'string',\r\n                label: 'Axis Type',\r\n                component: 'dropdown',\r\n                ref: 'props.xAxisType',\r\n                options: [{\r\n                  value: '-',\r\n                  label: 'Auto',\r\n                }, {\r\n                  value: 'linear',\r\n                  label: 'Linear',\r\n                }, {\r\n                  value: 'category',\r\n                  label: 'Category',\r\n                }, {\r\n                  value: 'log',\r\n                  label: 'Log',\r\n                }, {\r\n                  value: 'data',\r\n                  label: 'Date',\r\n                }],\r\n                defaultValue: '-',\r\n                show: (data) => {\r\n                  return [0, 17].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: 'items',\r\n            label: 'Y-axis',\r\n            items: {\r\n              yLabelsAndTitle: {\r\n                type: 'boolean',\r\n                label: 'Show title',\r\n                component: 'switch',\r\n                ref: 'props.yLabelsAndTitle',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'On',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Off',\r\n                }],\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return [0, 1, 9, 10, 16, 17, 20, 24].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              yAxisPosition: {\r\n                type: 'string',\r\n                label: 'Position',\r\n                component: 'dropdown',\r\n                ref: 'props.yAxisPosition',\r\n                options: [{\r\n                  value: 'left',\r\n                  label: 'Left',\r\n                }, {\r\n                  value: 'right',\r\n                  label: 'Right',\r\n                }],\r\n                defaultValue: 'left',\r\n                show: (data) => {\r\n                  return [0, 1, 9, 10, 15, 17, 20, 24, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n              yScale: {\r\n                type: 'boolean',\r\n                component: 'switch',\r\n                label: 'Scale',\r\n                ref: 'props.yScale',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'On',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Off',\r\n                }],\r\n                defaultValue: true,\r\n                show: (data) => {\r\n                  return [0, 1, 6, 8, 9, 10, 15, 17, 19, 24, 29].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n            },\r\n          },\r\n          zAxis: {\r\n            type: 'items',\r\n            label: 'Z-axis',\r\n            show: (data) => {\r\n              return [16].indexOf(data.props.analysisTypeId) >= 0;\r\n            },\r\n            items: {\r\n              zLabelsAndTitle: {\r\n                type: 'boolean',\r\n                label: 'Show title',\r\n                component: 'switch',\r\n                ref: 'props.zLabelsAndTitle',\r\n                options: [{\r\n                  value: true,\r\n                  label: 'On',\r\n                }, {\r\n                  value: false,\r\n                  label: 'Off',\r\n                }],\r\n                defaultValue: false,\r\n                show: (data) => {\r\n                  return [16].indexOf(data.props.analysisTypeId) >= 0;\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n});\r\n"]}